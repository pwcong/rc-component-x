@import '~@rc-x/style/common.scss';

$button-prefix-cls: #{$prefix-cls}-button;

$colors: (
  primary: $primary-color,
  warning: $warning-color,
  success: $success-color,
  danger: $error-color
);

$sizes: (
  large: (
    height: $button-height-lg,
    fontSize: $font-size-md,
    padding: $button-padding-lg,
    borderRadius: $border-radius-lg
  ),
  small: (
    height: $button-height-sm,
    fontSize: $font-size-sm,
    padding: $button-padding-sm,
    borderRadius: $border-radius-sm
  )
);

.#{$button-prefix-cls} {
  border: $border-width-sm solid $border-color;
  background-color: $white;
  border-radius: $border-radius;
  box-sizing: border-box;
  height: $button-height;
  padding: $button-padding;
  font-size: $font-size;
  color: $text-color;
  outline: none;
  cursor: pointer;

  @include easeInOutTransition;

  &-block {
    display: block;
    width: 100%;
  }

  &:hover {
    border-color: $primary-color;
    color: $primary-color;
  }

  &-loading {
    cursor: wait;
  }

  &-disabled {
    background-color: $disabled-color !important;
    border-color: $disabled-color !important;
    color: $text-color-light !important;
    cursor: not-allowed;
  }

  &-round {
    border-radius: $button-height / 2;
  }

  &-circle {
    width: $button-height;
    height: $button-height;
    border-radius: $button-height / 2;

    & > * {
      display: none;
    }
  }

  &-link {
    padding: 0;
    border: none !important;
    background-color: transparent !important;
  }

  &-icon {
    margin-right: 6px;
    display: inline !important;
  }

  &-circle &-icon {
    margin-right: 0;
  }
}

@each $key, $value in $sizes {
  .#{$button-prefix-cls}-#{$key} {
    font-size: map-get($value, fontSize);
    height: map-get($value, height);
    padding: map-get($value, padding);
    border-radius: map-get($value, borderRadius);
  }

  .#{$button-prefix-cls}-#{$key}.#{$button-prefix-cls}-round {
    border-radius: map-get($value, height) / 2;
  }
  .#{$button-prefix-cls}-#{$key}.#{$button-prefix-cls}-circle {
    width: map-get($value, height);
    height: map-get($value, height);
    border-radius: map-get($value, height) / 2;
  }
}

@each $key, $value in $colors {
  .#{$button-prefix-cls}.#{$button-prefix-cls}-#{$key} {
    border-color: $value;
    color: $value;
    &:hover {
      background-color: $value;
      color: $white;
    }
  }

  .#{$button-prefix-cls}.#{$button-prefix-cls}-#{$key}.#{$button-prefix-cls}-checked {
    background-color: $value;
    color: $white;
  }

  .#{$button-prefix-cls}.#{$button-prefix-cls}-#{$key}.#{$button-prefix-cls}-link {
    color: $value;
    &:hover {
      color: $value;
    }
  }
}
